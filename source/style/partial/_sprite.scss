// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-dribbble-name: 'icon-dribbble';
$icon-dribbble-x: 0px;
$icon-dribbble-y: 0px;
$icon-dribbble-offset-x: 0px;
$icon-dribbble-offset-y: 0px;
$icon-dribbble-width: 18px;
$icon-dribbble-height: 18px;
$icon-dribbble-total-width: 48px;
$icon-dribbble-total-height: 45px;
$icon-dribbble-image: './images/sprite.png';
$icon-dribbble: (0px, 0px, 0px, 0px, 18px, 18px, 48px, 45px, './images/sprite.png', 'icon-dribbble', );
$icon-facebook-name: 'icon-facebook';
$icon-facebook-x: 38px;
$icon-facebook-y: 17px;
$icon-facebook-offset-x: -38px;
$icon-facebook-offset-y: -17px;
$icon-facebook-width: 9px;
$icon-facebook-height: 16px;
$icon-facebook-total-width: 48px;
$icon-facebook-total-height: 45px;
$icon-facebook-image: './images/sprite.png';
$icon-facebook: (38px, 17px, -38px, -17px, 9px, 16px, 48px, 45px, './images/sprite.png', 'icon-facebook', );
$icon-lastfm-name: 'icon-lastfm';
$icon-lastfm-x: 0px;
$icon-lastfm-y: 36px;
$icon-lastfm-offset-x: 0px;
$icon-lastfm-offset-y: -36px;
$icon-lastfm-width: 16px;
$icon-lastfm-height: 9px;
$icon-lastfm-total-width: 48px;
$icon-lastfm-total-height: 45px;
$icon-lastfm-image: './images/sprite.png';
$icon-lastfm: (0px, 36px, 0px, -36px, 16px, 9px, 48px, 45px, './images/sprite.png', 'icon-lastfm', );
$icon-linkedin-name: 'icon-linkedin';
$icon-linkedin-x: 0px;
$icon-linkedin-y: 20px;
$icon-linkedin-offset-x: 0px;
$icon-linkedin-offset-y: -20px;
$icon-linkedin-width: 14px;
$icon-linkedin-height: 14px;
$icon-linkedin-total-width: 48px;
$icon-linkedin-total-height: 45px;
$icon-linkedin-image: './images/sprite.png';
$icon-linkedin: (0px, 20px, 0px, -20px, 14px, 14px, 48px, 45px, './images/sprite.png', 'icon-linkedin', );
$icon-search-name: 'icon-search';
$icon-search-x: 20px;
$icon-search-y: 0px;
$icon-search-offset-x: -20px;
$icon-search-offset-y: 0px;
$icon-search-width: 16px;
$icon-search-height: 15px;
$icon-search-total-width: 48px;
$icon-search-total-height: 45px;
$icon-search-image: './images/sprite.png';
$icon-search: (20px, 0px, -20px, 0px, 16px, 15px, 48px, 45px, './images/sprite.png', 'icon-search', );
$icon-tumblr-name: 'icon-tumblr';
$icon-tumblr-x: 38px;
$icon-tumblr-y: 0px;
$icon-tumblr-offset-x: -38px;
$icon-tumblr-offset-y: 0px;
$icon-tumblr-width: 10px;
$icon-tumblr-height: 15px;
$icon-tumblr-total-width: 48px;
$icon-tumblr-total-height: 45px;
$icon-tumblr-image: './images/sprite.png';
$icon-tumblr: (38px, 0px, -38px, 0px, 10px, 15px, 48px, 45px, './images/sprite.png', 'icon-tumblr', );
$icon-twitter-name: 'icon-twitter';
$icon-twitter-x: 16px;
$icon-twitter-y: 20px;
$icon-twitter-offset-x: -16px;
$icon-twitter-offset-y: -20px;
$icon-twitter-width: 16px;
$icon-twitter-height: 11px;
$icon-twitter-total-width: 48px;
$icon-twitter-total-height: 45px;
$icon-twitter-image: './images/sprite.png';
$icon-twitter: (16px, 20px, -16px, -20px, 16px, 11px, 48px, 45px, './images/sprite.png', 'icon-twitter', );
$spritesheet-width: 48px;
$spritesheet-height: 45px;
$spritesheet-image: './images/sprite.png';
$spritesheet-sprites: ($icon-dribbble, $icon-facebook, $icon-lastfm, $icon-linkedin, $icon-search, $icon-tumblr, $icon-twitter, );
$spritesheet: (48px, 45px, './images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
